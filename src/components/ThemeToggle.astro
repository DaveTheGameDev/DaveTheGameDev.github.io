---
import Icon from "./Icon.astro";
---

<theme-toggle>
    <button
        class="relative flex items-center justify-center w-16 h-8 rounded-full bg-slate-300 dark:bg-slate-500/50 transition-colors duration-300"
    >
        <span class="sr-only">Toggle dark/light mode</span>

        <!-- Toggle Circle -->
        <div
            class="relative w-6 h-6 rounded-full bg-white dark:bg-slate-300/40 shadow-md transform transition-transform duration-300 translate-x-[-14px] dark:translate-x-[14px]"
        >
            <!-- Sun Icon -->
            <span
                class="absolute inset-0 flex items-center justify-center text-gray-800 dark:text-gray-200 transition-opacity duration-300 opacity-100 dark:opacity-0"
            >
                <Icon icon="sun" />
            </span>

            <!-- Moon Icon -->
            <span
                class="absolute inset-0 flex items-center justify-center text-gray-800 dark:text-white transition-opacity duration-300 opacity-0 dark:opacity-100"
            >
                <Icon icon="moon-stars" />
            </span>
        </div>
    </button>
</theme-toggle>

<script>
    class ThemeToggle extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector("button")!;

            /** Set the theme to dark/light mode. */
            const setTheme = (dark: boolean) => {
                document.documentElement.classList[dark ? "add" : "remove"](
                    "dark",
                );
                button.setAttribute("aria-pressed", String(dark));
            };

            // Toggle the theme when a user clicks the button.
            button.addEventListener("click", () => setTheme(!this.isDark()));

            // Initialize button state to reflect current theme.
            setTheme(this.isDark());
        }

        isDark() {
            return document.documentElement.classList.contains("dark");
        }
    }
    customElements.define("theme-toggle", ThemeToggle);
</script>
