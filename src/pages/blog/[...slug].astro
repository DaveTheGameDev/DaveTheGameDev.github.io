---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import { Image } from 'astro:assets';
import Hero from "../../components/Hero.astro";
import Pill from "../../components/Pill.astro";

interface Props {
    entry: CollectionEntry<"blog">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
    const blog = await getCollection("blog");
    return blog.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
     <div class="mx-auto -mt-12 pb-12 max-w-6xl px-6 sm:mt-0 lg:px-8 xl:-mt-8 prose prose-zinc prose-lg dark:prose-invert">
        <div class="pt-24">
            <header
                class="border-b-2 border-zinc-300 dark:border-zinc-700/50 pb-5"
            >
                <div class="wrapper stack gap-2">
          
                    <Hero title={entry.data.title} align="start">
                        <div
                            class="text-xl py-4 font-roboto"
                        >
                            {entry.data.publishDate.toLocaleDateString()}
                        </div>
                        <div class="details">
        
                            <p class="description">{entry.data.description}</p>
                            {entry.data.tags && entry.data.tags.length > 0 && (
                                <div class="tags not-prose">
                                    <ul class="flex flex-wrap gap-2">
                                        {entry.data.tags.map((tag) => (
                                            <li class="bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded-md text-sm">
                                                {tag}
                                            </li>
                                        ))}
                                    </ul>
                                </div>
                            )}
                        </div>
                    </Hero>
                </div>
            </header>
            <main class="wrapper pt-2">
                <div class="stack gap-10 content">
                    {
                        entry.data.img && (
                            <Image
                                src={entry.data.img}
                                alt={entry.data.img_alt || ""}
                                width={1280}
                                height={573}
                                class="w-full h-full object-cover transition-all duration-300"
                                loading="eager"
                                decoding="async"
                            />
                        )
                    }
                    <div
                        class="content marker:text-zinc-500 dark:marker:text-zinc-300 list-disc"
                    >
                        <Content />
                    </div>
                </div>
            </main>
        </div>
    </div>
</BaseLayout>

